#!/usr/bin/env python
# -*- coding: utf-8 -*-
import cv2
from fgs_opt_from_scratch import (
        models, optimizers)
import yaml
from sys import exit, argv

if __name__ == '__main__':
    if len(argv) != 3:
        print('usage: rosrun fgs_opt_from_scratch optimize config_path data_path')
        exit(-1)

    with open(argv[1], 'r') as f:
        config_dict = yaml.load(f)

    cv_yaml = cv2.FileStorage(argv[2], cv2.FileStorage_READ)
    data = cv_yaml.getNode('data').mat()

    model = models.create(config_dict['model'])
    model.update(config_dict['init_param'])

    optimizer = optimizers.create(model, data, config_dict['optimizer'])

    print('initial param   : {}'.format(model.get_param()))
    print('initial residual: {}'.format(optimizer.residual()))

    print('optimize...')
    num_iteration = optimizer.optimize()

    print('num of iteration: {}'.format(num_iteration))
    print('final param     : {}'.format(model.get_param()))
    print('final residual  : {}'.format(optimizer.residual()))
